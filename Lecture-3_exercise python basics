myList=["apples","bananas"]
for i in myList:
    i.upper()
print(myList)

#['apples', 'bananas']
------------------------------------------------------------------------------------------------
myList=["apples","bananas"]
for i in myList:
  i=i.upper()
  
print(myList)

#['apples', 'bananas']
------------------------------------------------------------------------------------------------
myList=["apples","bananas"]
for i in range(len(myList)):
  myList[i]=myList[i].upper()
  
print(myList)

#infinite loop
------------------------------------------------------------------------------------------------
i=0
while i<3:
  print(i)
  i+=1
else:
  print(0)

#  
0
1
2
0
------------------------------------------------------------------------------------------------
mystr = "Machine Learning"
for i in range(mystr):
  print(i)
  
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-7-8fe9e63a1fde> in <module>()
      1 mystr = "Machine Learning"
----> 2 for i in range(mystr):
      3   print(i)

TypeError: 'str' object cannot be interpreted as an integer

------------------------------------------------------------------------------------------------
mystr = "Machine Learning"
for i in range(len(mystr)):
  print(i)
  
#0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15  
------------------------------------------------------------------------------------------------
mystr = "Machine Learning"
for i in range(len(mystr)):
  print(mystr[i])
  
#M
a
c
h
i
n
e
 
L
e
a
r
n
i
n
g
------------------------------------------------------------------------------------------------
mystr = "Machine Learning"
for i in range(len(mystr)):
  print(mystr)
  mystr="a"

#Machine Learning
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
------------------------------------------------------------------------------------------------
val=1
while True:
  if val%10==0:
    break
  print(val)
  val=val+1

#1
2
3
4
5
6
7
8
9
------------------------------------------------------------------------------------------------
val=1
while True:
  if val%3 == 0:
    break
  print(val)
  val+=1

#1
2
------------------------------------------------------------------------------------------------
val=1
while True:
  if val%3 == 0:
    break
  print(val)
  val += 1
  
#1
2
------------------------------------------------------------------------------------------------
def myVar(v):
  v=20
  
v=10
myVar(v)
print(v)

#10
------------------------------------------------------------------------------------------------
def func1(n):
  n=n*n
  return(n)

k=2
j=func1(k)
print(k)
print(j)

#2
4
------------------------------------------------------------------------------------------------
n=2
def func1(n):
  n=n*n
  return(n)

j=func1(n)
print(n)
print(j)

#2
4
------------------------------------------------------------------------------------------------
def func1(n):
  n[0]=20
  return(n)

n=[1]
print(n)
func1(n)
print(n)

#[1]
[20]
------------------------------------------------------------------------------------------------
def myVar(**kwargs):
  for key, val in kwargs.items():
    print(key+":"+val)

myVar(first="abc", second="bcd", third="cde")

#first:abc
second:bcd
third:cde
------------------------------------------------------------------------------------------------
cube=lambda x:x*x*x
print(cube(7))

#343
------------------------------------------------------------------------------------------------
y=8
z= lambda x:x*y

print(z(6))

#48
------------------------------------------------------------------------------------------------

